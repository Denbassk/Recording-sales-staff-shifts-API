// –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–æ–≤–æ–π –ª–æ–≥–∏–∫–∏ —Ä–∞—Å—á–µ—Ç–∞ –±–æ–Ω—É—Å–æ–≤
// –ó–∞–ø—É—Å–∫: node tests/test-bonus-calculation.js

function calculateDailyPay(revenue, numSellers, isSenior = false) {
  if (isSenior) return { baseRate: 1300, bonus: 0, totalPay: 1300, bonusDetails: '–°—Ç–∞—Ä—à–∏–π –ø—Ä–æ–¥–∞–≤–µ—Ü - —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Å—Ç–∞–≤–∫–∞' };
  if (numSellers === 0) return { baseRate: 0, bonus: 0, totalPay: 0, bonusDetails: '–ù–µ—Ç –ø—Ä–æ–¥–∞–≤—Ü–æ–≤' };
  
  let baseRatePerPerson = (numSellers === 1) ? 975 : 825;
  let bonusPerPerson = 0;
  let bonusDetails = '';

  if (revenue > 13000) {
    const bonusBase = revenue - 13000;
    const wholeThousands = Math.floor(bonusBase / 1000);
    let ratePerThousand = 0;
    
    // –ò–°–ü–†–ê–í–õ–ï–ù–ù–ê–Ø –õ–û–ì–ò–ö–ê: –æ–ø—Ä–µ–¥–µ–ª—è–µ–º —Å—Ç–∞–≤–∫—É –ø–æ –§–ê–ö–¢–ò–ß–ï–°–ö–û–ô –≤—ã—Ä—É—á–∫–µ
    if (revenue >= 50000) {
      ratePerThousand = 12;
      bonusDetails = `–ö–∞—Å—Å–∞ ${revenue}–≥—Ä–Ω (50-60–∫): ${wholeThousands}—Ç √ó 12–≥—Ä–Ω`;
    } else if (revenue >= 45000) {
      ratePerThousand = 11;
      bonusDetails = `–ö–∞—Å—Å–∞ ${revenue}–≥—Ä–Ω (45-50–∫): ${wholeThousands}—Ç √ó 11–≥—Ä–Ω`;
    } else if (revenue >= 40000) {
      ratePerThousand = 10;
      bonusDetails = `–ö–∞—Å—Å–∞ ${revenue}–≥—Ä–Ω (40-45–∫): ${wholeThousands}—Ç √ó 10–≥—Ä–Ω`;
    } else if (revenue >= 35000) {
      ratePerThousand = 9;
      bonusDetails = `–ö–∞—Å—Å–∞ ${revenue}–≥—Ä–Ω (35-40–∫): ${wholeThousands}—Ç √ó 9–≥—Ä–Ω`;
    } else if (revenue >= 30000) {
      ratePerThousand = 8;
      bonusDetails = `–ö–∞—Å—Å–∞ ${revenue}–≥—Ä–Ω (30-35–∫): ${wholeThousands}—Ç √ó 8–≥—Ä–Ω`;
    } else if (revenue >= 25000) {
      ratePerThousand = 7;
      bonusDetails = `–ö–∞—Å—Å–∞ ${revenue}–≥—Ä–Ω (25-30–∫): ${wholeThousands}—Ç √ó 7–≥—Ä–Ω`;
    } else if (revenue >= 20000) {
      ratePerThousand = 6;
      bonusDetails = `–ö–∞—Å—Å–∞ ${revenue}–≥—Ä–Ω (20-25–∫): ${wholeThousands}—Ç √ó 6–≥—Ä–Ω`;
    } else {
      ratePerThousand = 5;
      bonusDetails = `–ö–∞—Å—Å–∞ ${revenue}–≥—Ä–Ω (13-20–∫): ${wholeThousands}—Ç √ó 5–≥—Ä–Ω`;
    }
    
    // –í–ê–ñ–ù–û: –ë–æ–Ω—É—Å –ù–ï –¥–µ–ª–∏—Ç—Å—è! –ö–∞–∂–¥—ã–π –ø—Ä–æ–¥–∞–≤–µ—Ü –ø–æ–ª—É—á–∞–µ—Ç –ø–æ–ª–Ω—ã–π –±–æ–Ω—É—Å
    bonusPerPerson = wholeThousands * ratePerThousand;
  } else {
    bonusDetails = `–ö–∞—Å—Å–∞ ${revenue}–≥—Ä–Ω < 13000 - –±–µ–∑ –±–æ–Ω—É—Å–∞`;
  }
  
  return { 
    baseRate: baseRatePerPerson, 
    bonus: bonusPerPerson, 
    totalPay: baseRatePerPerson + bonusPerPerson,
    bonusDetails: bonusDetails
  };
}

// –¢–µ—Å—Ç–æ–≤—ã–µ —Å–ª—É—á–∞–∏
console.log('=== –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ù–û–í–û–ô –õ–û–ì–ò–ö–ò –†–ê–°–ß–ï–¢–ê –ë–û–ù–£–°–û–í ===');
console.log('‚ùó –ë–û–ù–£–° –ù–ï –î–ï–õ–ò–¢–°–Ø - –ö–ê–ñ–î–´–ô –ü–û–õ–£–ß–ê–ï–¢ –ü–û–õ–ù–£–Æ –°–£–ú–ú–£\n');

const testCases = [
  { revenue: 12000, numSellers: 2, description: '–ö–∞—Å—Å–∞ < 13000 (–±–µ–∑ –±–æ–Ω—É—Å–∞)' },
  { revenue: 18000, numSellers: 1, description: '–ö–∞—Å—Å–∞ 18–∫, 1 –ø—Ä–æ–¥–∞–≤–µ—Ü' },
  { revenue: 18000, numSellers: 2, description: '–ö–∞—Å—Å–∞ 18–∫, 2 –ø—Ä–æ–¥–∞–≤—Ü–∞' },
  { revenue: 29900, numSellers: 2, description: '–ü—Ä–∏–º–µ—Ä —Å–æ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞' },
  { revenue: 35000, numSellers: 1, description: '–ö–∞—Å—Å–∞ 35–∫ (–≥—Ä–∞–Ω–∏—Ü–∞ –¥–∏–∞–ø–∞–∑–æ–Ω–∞)' },
  { revenue: 48566.30, numSellers: 2, description: '–ö–∞—Å—Å–∞ 48566.30 (–∏–∑ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞)' },
  { revenue: 55000, numSellers: 1, description: '–ö–∞—Å—Å–∞ 55–∫ (–º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –¥–∏–∞–ø–∞–∑–æ–Ω)' },
];

testCases.forEach(test => {
  const result = calculateDailyPay(test.revenue, test.numSellers, false);
  console.log(`üìä ${test.description}:`);
  console.log(`   –ö–∞—Å—Å–∞: ${test.revenue} –≥—Ä–Ω, –ü—Ä–æ–¥–∞–≤—Ü–æ–≤: ${test.numSellers}`);
  console.log(`   –ë–∞–∑–æ–≤–∞—è —Å—Ç–∞–≤–∫–∞: ${result.baseRate} –≥—Ä–Ω`);
  console.log(`   –ë–æ–Ω—É—Å –Ω–∞ —á–µ–ª–æ–≤–µ–∫–∞: ${result.bonus.toFixed(2)} –≥—Ä–Ω`);
  console.log(`   –ò—Ç–æ–≥–æ –Ω–∞ —á–µ–ª–æ–≤–µ–∫–∞: ${result.totalPay.toFixed(2)} –≥—Ä–Ω`);
  console.log(`   –†–∞—Å—à–∏—Ñ—Ä–æ–≤–∫–∞: ${result.bonusDetails}`);
  
  // –°–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–ª—è –ø—Ä–∏–º–µ—Ä–∞ —Å–æ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞
  if (test.revenue === 29900 && test.numSellers === 2) {
    const expectedTotal = 937; // 825 + 112 (–±–æ–Ω—É—Å –ù–ï –¥–µ–ª–∏—Ç—Å—è!)
    const actualTotal = result.totalPay;
    if (Math.abs(actualTotal - expectedTotal) < 0.01) {
      console.log(`   ‚úÖ –ü–†–û–í–ï–†–ö–ê –ü–†–û–ô–î–ï–ù–ê: –°–æ–≤–ø–∞–¥–∞–µ—Ç —Å –ø—Ä–∏–º–µ—Ä–æ–º –Ω–∞ —Å–∫—Ä–∏–Ω—à–æ—Ç–µ!`);
    } else {
      console.log(`   ‚ùå –û–®–ò–ë–ö–ê: –û–∂–∏–¥–∞–ª–æ—Å—å ${expectedTotal}, –ø–æ–ª—É—á–µ–Ω–æ ${actualTotal}`);
    }
  }
  console.log('');
});

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–ª—è –∫–∞—Å—Å—ã 48566.30 –∏–∑ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞
console.log('=== –ü–†–û–í–ï–†–ö–ê –°–ö–†–ò–ù–®–û–¢–ê (48566.30 –≥—Ä–Ω, 2 –ø—Ä–æ–¥–∞–≤—Ü–∞) ===');
const screenShotTest = calculateDailyPay(48566.30, 2, false);
console.log(`–ö–∞—Å—Å–∞: 48566.30 –≥—Ä–Ω`);
console.log(`48566.30 - 13000 = 35566.30 –≥—Ä–Ω`);
console.log(`–¶–µ–ª—ã—Ö —Ç—ã—Å—è—á: 35`);
console.log(`–î–∏–∞–ø–∞–∑–æ–Ω 45-50–∫ ‚Üí —Å—Ç–∞–≤–∫–∞ 11 –≥—Ä–Ω/—Ç—ã—Å`);
console.log(`–ë–æ–Ω—É—Å –ù–ê –ö–ê–ñ–î–û–ì–û: 35 √ó 11 = 385 –≥—Ä–Ω (–ù–ï –î–ï–õ–ò–¢–°–Ø!)`);
console.log(`–ò—Ç–æ–≥–æ –Ω–∞ —á–µ–ª–æ–≤–µ–∫–∞: 825 + 385 = 1210 –≥—Ä–Ω`);
console.log(`\n–†–µ–∑—É–ª—å—Ç–∞—Ç —Ñ—É–Ω–∫—Ü–∏–∏: ${screenShotTest.totalPay.toFixed(2)} –≥—Ä–Ω`);
if (Math.abs(screenShotTest.totalPay - 1210) < 0.01) {
  console.log('‚úÖ –†–ê–°–ß–ï–¢ –í–ï–†–ù–´–ô!');
} else {
  console.log('‚ùå –†–ê–°–ß–ï–¢ –ù–ï–í–ï–†–ù–´–ô!');
}

console.log('\n=== –°–†–ê–í–ù–ï–ù–ò–ï –° –ò –ë–ï–ó –î–ï–õ–ï–ù–ò–Ø –ë–û–ù–£–°–ê ===');
console.log('–ö–∞—Å—Å–∞ 30000, 3 –ø—Ä–æ–¥–∞–≤—Ü–∞:');
const test3sellers = calculateDailyPay(30000, 3, false);
console.log(`  –°—Ç–∞—Ä–∞—è –ª–æ–≥–∏–∫–∞ (—Å –¥–µ–ª–µ–Ω–∏–µ–º): 825 + (17—Ç√ó8–≥—Ä–Ω)/3 = 825 + 45.33 = 870.33 –≥—Ä–Ω`);
console.log(`  –ù–æ–≤–∞—è –ª–æ–≥–∏–∫–∞ (–±–µ–∑ –¥–µ–ª–µ–Ω–∏—è): 825 + 17—Ç√ó8–≥—Ä–Ω = 825 + 136 = 961 –≥—Ä–Ω`);
console.log(`  –†–µ–∑—É–ª—å—Ç–∞—Ç —Ñ—É–Ω–∫—Ü–∏–∏: ${test3sellers.totalPay.toFixed(2)} –≥—Ä–Ω`);
console.log(`  –†–∞–∑–Ω–∏—Ü–∞ –Ω–∞ —á–µ–ª–æ–≤–µ–∫–∞: ${(961 - 870.33).toFixed(2)} –≥—Ä–Ω –±–æ–ª—å—à–µ!`);
