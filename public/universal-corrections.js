// universal-corrections.js - –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–æ–∫

class UniversalCorrectionsModal {
    constructor() {
        this.currentEmployee = null;
        this.currentMonth = null;
        this.currentYear = null;
        this.originalData = null;
        this.adjustedData = null;
    }

    // –û—Ç–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
    async open(employeeId, employeeName, month, year) {
        this.currentEmployee = { id: employeeId, name: employeeName };
        this.currentMonth = month;
        this.currentYear = year;
        
        // –ó–∞–≥—Ä—É–∂–∞–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞
        await this.loadEmployeeData();
        
        // –°–æ–∑–¥–∞–µ–º –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
        this.createModal();
    }

    // –ó–∞–≥—Ä—É–∑–∫–∞ –≤—Å–µ—Ö –¥–∞–Ω–Ω—ã—Ö —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞
    async loadEmployeeData() {
        try {
            const response = await fetch(`${API_BASE}/get-employee-full-data`, {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                credentials: 'include',
                body: JSON.stringify({
                    employee_id: this.currentEmployee.id,
                    month: this.currentMonth,
                    year: this.currentYear
                })
            });
            
            const data = await response.json();
            this.originalData = data;
            this.adjustedData = JSON.parse(JSON.stringify(data)); // –ì–ª—É–±–æ–∫–∞—è –∫–æ–ø–∏—è
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö:', error);
        }
    }

    // –°–æ–∑–¥–∞–Ω–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
    createModal() {
        // –£–¥–∞–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–µ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –µ—Å–ª–∏ –µ—Å—Ç—å
        const existing = document.getElementById('universal-corrections-modal');
        if (existing) existing.remove();

        const modalHTML = `
        <div id="universal-corrections-modal" class="ucm-overlay">
            <div class="ucm-container">
                <div class="ucm-header">
                    <h2>üíº –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è –∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∫–∞ –≤—ã–ø–ª–∞—Ç</h2>
                    <button class="ucm-close" onclick="ucModal.close()">‚úï</button>
                </div>
                
                <div class="ucm-employee-info">
                    <div class="ucm-info-card">
                        <h3>${this.currentEmployee.name}</h3>
                        <span class="ucm-period">${this.getMonthName(this.currentMonth)} ${this.currentYear}</span>
                    </div>
                </div>

                <div class="ucm-tabs">
                    <button class="ucm-tab active" data-tab="summary">üìä –°–≤–æ–¥–∫–∞</button>
                    <button class="ucm-tab" data-tab="advance">üí∞ –ê–≤–∞–Ω—Å</button>
                    <button class="ucm-tab" data-tab="salary">üíµ –ó–∞—Ä–ø–ª–∞—Ç–∞</button>
                    <button class="ucm-tab" data-tab="bonuses">üéÅ –ü—Ä–µ–º–∏–∏/–®—Ç—Ä–∞—Ñ—ã</button>
                    <button class="ucm-tab" data-tab="shortages">üìâ –ù–µ–¥–æ—Å—Ç–∞—á–∏</button>
                    <button class="ucm-tab" data-tab="special">‚ö° –û—Å–æ–±—ã–µ —Å–ª—É—á–∞–∏</button>
                </div>

                <div class="ucm-content">
                    <!-- –í–∫–ª–∞–¥–∫–∞ –°–≤–æ–¥–∫–∞ -->
                    <div class="ucm-tab-content active" data-content="summary">
                        ${this.renderSummaryTab()}
                    </div>
                    
                    <!-- –í–∫–ª–∞–¥–∫–∞ –ê–≤–∞–Ω—Å -->
                    <div class="ucm-tab-content" data-content="advance">
                        ${this.renderAdvanceTab()}
                    </div>
                    
                    <!-- –í–∫–ª–∞–¥–∫–∞ –ó–∞—Ä–ø–ª–∞—Ç–∞ -->
                    <div class="ucm-tab-content" data-content="salary">
                        ${this.renderSalaryTab()}
                    </div>
                    
                    <!-- –í–∫–ª–∞–¥–∫–∞ –ü—Ä–µ–º–∏–∏/–®—Ç—Ä–∞—Ñ—ã -->
                    <div class="ucm-tab-content" data-content="bonuses">
                        ${this.renderBonusesTab()}
                    </div>
                    
                    <!-- –í–∫–ª–∞–¥–∫–∞ –ù–µ–¥–æ—Å—Ç–∞—á–∏ -->
                    <div class="ucm-tab-content" data-content="shortages">
                        ${this.renderShortagesTab()}
                    </div>
                    
                    <!-- –í–∫–ª–∞–¥–∫–∞ –û—Å–æ–±—ã–µ —Å–ª—É—á–∞–∏ -->
                    <div class="ucm-tab-content" data-content="special">
                        ${this.renderSpecialTab()}
                    </div>
                </div>

                <div class="ucm-live-preview">
                    <h4>üìã –ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–π —Ä–∞—Å—á–µ—Ç:</h4>
                    <div id="ucm-preview-content">
                        ${this.renderLivePreview()}
                    </div>
                </div>

                <div class="ucm-footer">
                    <button class="ucm-btn ucm-btn-secondary" onclick="ucModal.reset()">
                        üîÑ –°–±—Ä–æ—Å–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è
                    </button>
                    <button class="ucm-btn ucm-btn-primary" onclick="ucModal.save()">
                        üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤—Å–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è
                    </button>
                </div>
            </div>
        </div>`;

        document.body.insertAdjacentHTML('beforeend', modalHTML);
        this.attachEventListeners();
    }

    // –†–µ–Ω–¥–µ—Ä –≤–∫–ª–∞–¥–∫–∏ –°–≤–æ–¥–∫–∞
    renderSummaryTab() {
        const d = this.originalData;
        return `
        <div class="ucm-summary-grid">
            <div class="ucm-summary-card">
                <h4>–ù–∞—á–∏—Å–ª–µ–Ω–∏—è</h4>
                <div class="ucm-summary-row">
                    <span>–ë–∞–∑–∞ (—Å–º–µ–Ω—ã):</span>
                    <strong>${this.formatNumber(d.basePay)} –≥—Ä–Ω</strong>
                </div>
                <div class="ucm-summary-row">
                    <span>–ü—Ä–µ–º–∏–∏:</span>
                    <strong class="positive">${this.formatNumber(d.bonuses)} –≥—Ä–Ω</strong>
                </div>
                <div class="ucm-summary-row total">
                    <span>–í—Å–µ–≥–æ –Ω–∞—á–∏—Å–ª–µ–Ω–æ:</span>
                    <strong>${this.formatNumber(d.totalGross)} –≥—Ä–Ω</strong>
                </div>
            </div>
            
            <div class="ucm-summary-card">
                <h4>–í—ã—á–µ—Ç—ã</h4>
                <div class="ucm-summary-row">
                    <span>–®—Ç—Ä–∞—Ñ—ã:</span>
                    <strong class="negative">${this.formatNumber(d.penalties)} –≥—Ä–Ω</strong>
                </div>
                <div class="ucm-summary-row">
                    <span>–ù–µ–¥–æ—Å—Ç–∞—á–∏:</span>
                    <strong class="negative">${this.formatNumber(d.shortages)} –≥—Ä–Ω</strong>
                </div>
                <div class="ucm-summary-row total">
                    <span>–í—Å–µ–≥–æ –≤—ã—á–µ—Ç–æ–≤:</span>
                    <strong class="negative">${this.formatNumber(d.totalDeductions)} –≥—Ä–Ω</strong>
                </div>
            </div>
            
            <div class="ucm-summary-card">
                <h4>–í—ã–ø–ª–∞—Ç—ã</h4>
                <div class="ucm-summary-row">
                    <span>–ê–≤–∞–Ω—Å:</span>
                    <strong>${this.formatNumber(d.advanceTotal)} –≥—Ä–Ω</strong>
                </div>
                <div class="ucm-summary-row">
                    <span>–ó–∞—Ä–ø–ª–∞—Ç–∞:</span>
                    <strong>${this.formatNumber(d.salaryTotal)} –≥—Ä–Ω</strong>
                </div>
                <div class="ucm-summary-row total">
                    <span>–ö –≤—ã–ø–ª–∞—Ç–µ –∏—Ç–æ–≥–æ:</span>
                    <strong class="primary">${this.formatNumber(d.totalToPay)} –≥—Ä–Ω</strong>
                </div>
            </div>
        </div>`;
    }

    // –†–µ–Ω–¥–µ—Ä –≤–∫–ª–∞–¥–∫–∏ –ê–≤–∞–Ω—Å
    renderAdvanceTab() {
        return `
        <div class="ucm-form-section">
            <h4>–ö–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∫–∞ –∞–≤–∞–Ω—Å–∞</h4>
            
            <div class="ucm-quick-actions">
                <button class="ucm-quick-btn" onclick="ucModal.setAdvancePreset('standard')">
                    üìê –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π (90%)
                </button>
                <button class="ucm-quick-btn" onclick="ucModal.setAdvancePreset('max')">
                    üìà –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π (7900)
                </button>
                <button class="ucm-quick-btn" onclick="ucModal.setAdvancePreset('zero')">
                    ‚ùå –ë–µ–∑ –∞–≤–∞–Ω—Å–∞
                </button>
                <button class="ucm-quick-btn" onclick="ucModal.setAdvancePreset('custom')">
                    ‚úèÔ∏è –ü—Ä–æ–∏–∑–≤–æ–ª—å–Ω—ã–π
                </button>
            </div>
            
            <div class="ucm-form-group">
                <label>üí≥ –ê–≤–∞–Ω—Å –Ω–∞ –∫–∞—Ä—Ç—É:</label>
                <input type="number" id="ucm-advance-card" 
                       value="${this.adjustedData.advanceCard || 0}"
                       onchange="ucModal.updateCalculations()">
                <small>–ú–∞–∫—Å–∏–º—É–º: ${this.formatNumber(Math.min(7900, 8600))} –≥—Ä–Ω</small>
            </div>
            
            <div class="ucm-form-group">
                <label>üíµ –ê–≤–∞–Ω—Å –Ω–∞–ª–∏—á–Ω—ã–º–∏:</label>
                <input type="number" id="ucm-advance-cash" 
                       value="${this.adjustedData.advanceCash || 0}"
                       onchange="ucModal.updateCalculations()">
            </div>
            
            <div class="ucm-form-group">
                <label>üìù –ü—Ä–∏—á–∏–Ω–∞ –∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∫–∏:</label>
                <select id="ucm-advance-reason" onchange="ucModal.handleReasonChange(this)">
                    <option value="">-- –í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–∏—á–∏–Ω—É --</option>
                    <option value="employee_request">–ü–æ –∑–∞—è–≤–ª–µ–Ω–∏—é —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞</option>
                    <option value="termination">–£–≤–æ–ª—å–Ω–µ–Ω–∏–µ</option>
                    <option value="vacation">–û—Ç–ø—É—Å–∫–Ω—ã–µ</option>
                    <option value="sick_leave">–ë–æ–ª—å–Ω–∏—á–Ω—ã–π</option>
                    <option value="advance_loan">–ó–∞–π–º –≤ —Å—á–µ—Ç –∑–∞—Ä–ø–ª–∞—Ç—ã</option>
                    <option value="other">–î—Ä—É–≥–æ–µ...</option>
                </select>
                <input type="text" id="ucm-advance-reason-custom" 
                       placeholder="–£–∫–∞–∂–∏—Ç–µ –ø—Ä–∏—á–∏–Ω—É" 
                       style="display:none; margin-top:10px;">
            </div>
            
            <div class="ucm-alert ucm-alert-info">
                ‚ÑπÔ∏è –õ–∏–º–∏—Ç—ã: –º–∞–∫—Å–∏–º—É–º –Ω–∞ –∫–∞—Ä—Ç—É 8600 –≥—Ä–Ω/–º–µ—Å—è—Ü, —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –∞–≤–∞–Ω—Å 7900 –≥—Ä–Ω
            </div>
        </div>`;
    }

    // –†–µ–Ω–¥–µ—Ä –≤–∫–ª–∞–¥–∫–∏ –ó–∞—Ä–ø–ª–∞—Ç–∞
    renderSalaryTab() {
        return `
        <div class="ucm-form-section">
            <h4>–ö–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∫–∞ –∑–∞—Ä–ø–ª–∞—Ç—ã</h4>
            
            <div class="ucm-form-group">
                <label>üí≥ –û—Å—Ç–∞—Ç–æ–∫ –Ω–∞ –∫–∞—Ä—Ç—É:</label>
                <input type="number" id="ucm-salary-card" 
                       value="${this.adjustedData.salaryCard || 0}"
                       onchange="ucModal.updateCalculations()">
                <small>–î–æ—Å—Ç—É–ø–Ω–æ: ${this.formatNumber(8600 - (this.adjustedData.advanceCard || 0))} –≥—Ä–Ω</small>
            </div>
            
            <div class="ucm-form-group">
                <label>üíµ –ó–∞—Ä–ø–ª–∞—Ç–∞ –Ω–∞–ª–∏—á–Ω—ã–º–∏:</label>
                <input type="number" id="ucm-salary-cash" 
                       value="${this.adjustedData.salaryCash || 0}"
                       onchange="ucModal.updateCalculations()">
            </div>
            
            <div class="ucm-form-group">
                <label>üîÑ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ:</label>
                <button class="ucm-btn-small" onclick="ucModal.autoDistribute()">
                    –†–∞—Å–ø—Ä–µ–¥–µ–ª–∏—Ç—å –æ—Å—Ç–∞—Ç–æ–∫ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
                </button>
            </div>
        </div>`;
    }

    // –†–µ–Ω–¥–µ—Ä –≤–∫–ª–∞–¥–∫–∏ –ü—Ä–µ–º–∏–∏/–®—Ç—Ä–∞—Ñ—ã
    renderBonusesTab() {
        return `
        <div class="ucm-form-section">
            <h4>–ü—Ä–µ–º–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ –¥–µ–ø—Ä–µ–º–∏—Ä–æ–≤–∞–Ω–∏–µ</h4>
            
            <div class="ucm-form-group">
                <label>‚ûï –ü—Ä–µ–º–∏—è:</label>
                <input type="number" id="ucm-bonus" 
                       value="${this.adjustedData.bonus || 0}"
                       onchange="ucModal.updateCalculations()">
                <input type="text" id="ucm-bonus-reason" 
                       placeholder="–ü—Ä–∏—á–∏–Ω–∞ –ø—Ä–µ–º–∏—Ä–æ–≤–∞–Ω–∏—è"
                       value="${this.adjustedData.bonusReason || ''}">
            </div>
            
            <div class="ucm-form-group">
                <label>‚ûñ –î–µ–ø—Ä–µ–º–∏—Ä–æ–≤–∞–Ω–∏–µ:</label>
                <input type="number" id="ucm-penalty" 
                       value="${this.adjustedData.penalty || 0}"
                       onchange="ucModal.updateCalculations()">
                <input type="text" id="ucm-penalty-reason" 
                       placeholder="–ü—Ä–∏—á–∏–Ω–∞ –¥–µ–ø—Ä–µ–º–∏—Ä–æ–≤–∞–Ω–∏—è"
                       value="${this.adjustedData.penaltyReason || ''}">
            </div>
            
            <div class="ucm-quick-templates">
                <h5>–ë—ã—Å—Ç—Ä—ã–µ —à–∞–±–ª–æ–Ω—ã:</h5>
                <button onclick="ucModal.applyTemplate('bonus', 500, '–ó–∞ –ø–µ—Ä–µ–≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –ø–ª–∞–Ω–∞')">
                    +500 –≥—Ä–Ω –∑–∞ –ø–ª–∞–Ω
                </button>
                <button onclick="ucModal.applyTemplate('penalty', 300, '–û–ø–æ–∑–¥–∞–Ω–∏–µ')">
                    -300 –≥—Ä–Ω –æ–ø–æ–∑–¥–∞–Ω–∏–µ
                </button>
            </div>
        </div>`;
    }

    // –†–µ–Ω–¥–µ—Ä –≤–∫–ª–∞–¥–∫–∏ –ù–µ–¥–æ—Å—Ç–∞—á–∏
    renderShortagesTab() {
        return `
        <div class="ucm-form-section">
            <h4>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–µ–¥–æ—Å—Ç–∞—á–∞–º–∏</h4>
            
            <div class="ucm-shortages-list">
                ${this.renderShortagesList()}
            </div>
            
            <div class="ucm-form-group">
                <h5>–î–æ–±–∞–≤–∏—Ç—å –Ω–µ–¥–æ—Å—Ç–∞—á—É:</h5>
                <input type="number" id="ucm-new-shortage-amount" 
                       placeholder="–°—É–º–º–∞">
                <input type="text" id="ucm-new-shortage-desc" 
                       placeholder="–û–ø–∏—Å–∞–Ω–∏–µ (–Ω–∞–∫–ª–∞–¥–Ω–∞—è, –¥–∞—Ç–∞)">
                <select id="ucm-new-shortage-deduction">
                    <option value="advance">–í—ã—á–µ—Å—Ç—å –∏–∑ –∞–≤–∞–Ω—Å–∞</option>
                    <option value="salary">–í—ã—á–µ—Å—Ç—å –∏–∑ –∑–∞—Ä–ø–ª–∞—Ç—ã</option>
                    <option value="both">–†–∞–∑–¥–µ–ª–∏—Ç—å 50/50</option>
                </select>
                <button onclick="ucModal.addShortage()">‚ûï –î–æ–±–∞–≤–∏—Ç—å</button>
            </div>
        </div>`;
    }

    // –†–µ–Ω–¥–µ—Ä –≤–∫–ª–∞–¥–∫–∏ –û—Å–æ–±—ã–µ —Å–ª—É—á–∞–∏
    renderSpecialTab() {
        return `
        <div class="ucm-form-section">
            <h4>–û—Å–æ–±—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏</h4>
            
            <div class="ucm-special-actions">
                <div class="ucm-action-card">
                    <h5>üö™ –£–≤–æ–ª—å–Ω–µ–Ω–∏–µ</h5>
                    <p>–ü–æ–ª–Ω–∞—è –≤—ã–ø–ª–∞—Ç–∞ –≤—Å–µ—Ö –Ω–∞—á–∏—Å–ª–µ–Ω–∏–π</p>
                    <button class="ucm-btn-danger" onclick="ucModal.processTermination()">
                        –û—Ñ–æ—Ä–º–∏—Ç—å —É–≤–æ–ª—å–Ω–µ–Ω–∏–µ
                    </button>
                </div>
                
                <div class="ucm-action-card">
                    <h5>üèñÔ∏è –û—Ç–ø—É—Å–∫–Ω—ã–µ</h5>
                    <p>–í—ã–ø–ª–∞—Ç–∞ –æ—Ç–ø—É—Å–∫–Ω—ã—Ö –∞–≤–∞–Ω—Å–æ–º</p>
                    <button class="ucm-btn-warning" onclick="ucModal.processVacation()">
                        –û—Ñ–æ—Ä–º–∏—Ç—å –æ—Ç–ø—É—Å–∫–Ω—ã–µ
                    </button>
                </div>
                
                <div class="ucm-action-card">
                    <h5>üí∏ –ó–∞–π–º</h5>
                    <p>–í—ã–¥–∞—á–∞ –¥–µ–Ω–µ–≥ –≤ —Å—á–µ—Ç –±—É–¥—É—â–µ–π –∑–∞—Ä–ø–ª–∞—Ç—ã</p>
                    <button class="ucm-btn-info" onclick="ucModal.processLoan()">
                        –û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–π–º
                    </button>
                </div>
                
                <div class="ucm-action-card">
                    <h5>üö´ –ü—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—ã–ø–ª–∞—Ç</h5>
                    <p>–í—Ä–µ–º–µ–Ω–Ω–∞—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –≤—Å–µ—Ö –≤—ã–ø–ª–∞—Ç</p>
                    <button class="ucm-btn-danger" onclick="ucModal.suspendPayments()">
                        –ü—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—ã–ø–ª–∞—Ç—ã
                    </button>
                </div>
            </div>
        </div>`;
    }

    // Live preview –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
    renderLivePreview() {
        const d = this.adjustedData || this.originalData;
        const changes = this.getChanges();
        
        return `
        <div class="ucm-preview-grid">
            <div class="ucm-preview-item">
                <span>–ù–∞—á–∏—Å–ª–µ–Ω–æ:</span>
                <strong class="${changes.totalGross ? 'changed' : ''}">
                    ${this.formatNumber(d.totalGross)} –≥—Ä–Ω
                </strong>
            </div>
            <div class="ucm-preview-item">
                <span>–í—ã—á–µ—Ç—ã:</span>
                <strong class="${changes.totalDeductions ? 'changed negative' : ''}">
                    -${this.formatNumber(d.totalDeductions)} –≥—Ä–Ω
                </strong>
            </div>
            <div class="ucm-preview-item">
                <span>–ö –≤—ã–ø–ª–∞—Ç–µ:</span>
                <strong class="${changes.totalToPay ? 'changed primary' : ''}">
                    ${this.formatNumber(d.totalToPay)} –≥—Ä–Ω
                </strong>
            </div>
        </div>
        
        <div class="ucm-payment-breakdown">
            <h5>–†–∞–∑–±–∏–≤–∫–∞ –≤—ã–ø–ª–∞—Ç:</h5>
            <div class="ucm-payment-row ${changes.advanceCard ? 'changed' : ''}">
                <span>–ê–≤–∞–Ω—Å –Ω–∞ –∫–∞—Ä—Ç—É:</span>
                <strong>${this.formatNumber(d.advanceCard)} –≥—Ä–Ω</strong>
            </div>
            <div class="ucm-payment-row ${changes.advanceCash ? 'changed' : ''}">
                <span>–ê–≤–∞–Ω—Å –Ω–∞–ª–∏—á–Ω—ã–º–∏:</span>
                <strong>${this.formatNumber(d.advanceCash)} –≥—Ä–Ω</strong>
            </div>
            <div class="ucm-payment-row ${changes.salaryCard ? 'changed' : ''}">
                <span>–ó–∞—Ä–ø–ª–∞—Ç–∞ –Ω–∞ –∫–∞—Ä—Ç—É:</span>
                <strong>${this.formatNumber(d.salaryCard)} –≥—Ä–Ω</strong>
            </div>
            <div class="ucm-payment-row ${changes.salaryCash ? 'changed' : ''}">
                <span>–ó–∞—Ä–ø–ª–∞—Ç–∞ –Ω–∞–ª–∏—á–Ω—ã–º–∏:</span>
                <strong>${this.formatNumber(d.salaryCash)} –≥—Ä–Ω</strong>
            </div>
        </div>
        
        ${this.renderChangesSummary()}`;
    }

    // –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π
    renderChangesSummary() {
        const changes = this.getChanges();
        if (Object.keys(changes).length === 0) {
            return '<div class="ucm-no-changes">–ò–∑–º–µ–Ω–µ–Ω–∏–π –Ω–µ—Ç</div>';
        }
        
        let html = '<div class="ucm-changes-summary"><h5>–í–Ω–µ—Å–µ–Ω–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è:</h5><ul>';
        for (const [key, value] of Object.entries(changes)) {
            html += `<li>${this.getFieldName(key)}: ${value.from} ‚Üí ${value.to}</li>`;
        }
        html += '</ul></div>';
        return html;
    }

    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ä–∞—Å—á–µ—Ç–æ–≤
    updateCalculations() {
        // –°–æ–±–∏—Ä–∞–µ–º –≤—Å–µ –∑–Ω–∞—á–µ–Ω–∏—è –∏–∑ —Ñ–æ—Ä–º—ã
        this.adjustedData.advanceCard = parseFloat(document.getElementById('ucm-advance-card')?.value) || 0;
        this.adjustedData.advanceCash = parseFloat(document.getElementById('ucm-advance-cash')?.value) || 0;
        this.adjustedData.salaryCard = parseFloat(document.getElementById('ucm-salary-card')?.value) || 0;
        this.adjustedData.salaryCash = parseFloat(document.getElementById('ucm-salary-cash')?.value) || 0;
        this.adjustedData.bonus = parseFloat(document.getElementById('ucm-bonus')?.value) || 0;
        this.adjustedData.penalty = parseFloat(document.getElementById('ucm-penalty')?.value) || 0;
        
        // –ü–µ—Ä–µ—Å—á–∏—Ç—ã–≤–∞–µ–º –∏—Ç–æ–≥–∏
        this.adjustedData.totalGross = this.adjustedData.basePay + this.adjustedData.bonus;
        this.adjustedData.totalDeductions = this.adjustedData.penalty + this.adjustedData.shortages;
        this.adjustedData.totalToPay = this.adjustedData.totalGross - this.adjustedData.totalDeductions;
        this.adjustedData.advanceTotal = this.adjustedData.advanceCard + this.adjustedData.advanceCash;
        this.adjustedData.salaryTotal = this.adjustedData.salaryCard + this.adjustedData.salaryCash;
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–µ–≤—å—é
        document.getElementById('ucm-preview-content').innerHTML = this.renderLivePreview();
    }

    // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π
    async save() {
        const changes = this.getChanges();
        
        if (Object.keys(changes).length === 0) {
            alert('–ù–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–π –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è');
            return;
        }
        
        if (!confirm('–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤—Å–µ –≤–Ω–µ—Å–µ–Ω–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è?')) {
            return;
        }
        
        try {
            const response = await fetch(`${API_BASE}/save-universal-corrections`, {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                credentials: 'include',
                body: JSON.stringify({
                    employee_id: this.currentEmployee.id,
                    month: this.currentMonth,
                    year: this.currentYear,
                    corrections: this.adjustedData,
                    changes: changes
                })
            });
            
            const result = await response.json();
            
            if (result.success) {
                showModalNotification('‚úÖ –í—Å–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã', 'success');
                this.close();
                // –û–±–Ω–æ–≤–ª—è–µ–º –æ—Å–Ω–æ–≤–Ω—É—é —Ç–∞–±–ª–∏—Ü—É
                if (typeof generateMonthlyReport === 'function') {
                    generateMonthlyReport();
                }
            } else {
                alert('–û—à–∏–±–∫–∞: ' + result.error);
            }
        } catch (error) {
            alert('–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è: ' + error.message);
        }
    }

    // –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–π
    getChanges() {
        const changes = {};
        const fields = ['advanceCard', 'advanceCash', 'salaryCard', 'salaryCash', 
                       'bonus', 'penalty', 'totalGross', 'totalDeductions', 'totalToPay'];
        
        for (const field of fields) {
            if (this.originalData[field] !== this.adjustedData[field]) {
                changes[field] = {
                    from: this.originalData[field],
                    to: this.adjustedData[field]
                };
            }
        }
        
        return changes;
    }

    // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
    close() {
        const modal = document.getElementById('universal-corrections-modal');
        if (modal) modal.remove();
    }

    // –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ –º–µ—Ç–æ–¥—ã
    formatNumber(num) {
        return formatNumber(num); // –ò—Å–ø–æ–ª—å–∑—É–µ–º –≥–ª–æ–±–∞–ª—å–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é
    }

    getMonthName(month) {
        const names = ["–Ø–Ω–≤–∞—Ä—å", "–§–µ–≤—Ä–∞–ª—å", "–ú–∞—Ä—Ç", "–ê–ø—Ä–µ–ª—å", "–ú–∞–π", "–ò—é–Ω—å",
                      "–ò—é–ª—å", "–ê–≤–≥—É—Å—Ç", "–°–µ–Ω—Ç—è–±—Ä—å", "–û–∫—Ç—è–±—Ä—å", "–ù–æ—è–±—Ä—å", "–î–µ–∫–∞–±—Ä—å"];
        return names[month - 1];
    }

    // –ü—Ä–∏–≤—è–∑–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π
    attachEventListeners() {
        // –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –≤–∫–ª–∞–¥–æ–∫
        document.querySelectorAll('.ucm-tab').forEach(tab => {
            tab.addEventListener('click', (e) => {
                const tabName = e.target.dataset.tab;
                
                // –î–µ–∞–∫—Ç–∏–≤–∏—Ä—É–µ–º –≤—Å–µ –≤–∫–ª–∞–¥–∫–∏
                document.querySelectorAll('.ucm-tab').forEach(t => t.classList.remove('active'));
                document.querySelectorAll('.ucm-tab-content').forEach(c => c.classList.remove('active'));
                
                // –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –≤—ã–±—Ä–∞–Ω–Ω—É—é
                e.target.classList.add('active');
                document.querySelector(`[data-content="${tabName}"]`).classList.add('active');
            });
        });
        
        // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø–æ –∫–ª–∏–∫—É –Ω–∞ –æ–≤–µ—Ä–ª–µ–π
        document.querySelector('.ucm-overlay').addEventListener('click', (e) => {
            if (e.target.classList.contains('ucm-overlay')) {
                this.close();
            }
        });
    }

    // –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏
    processTermination() {
        if (!confirm('–û—Ñ–æ—Ä–º–∏—Ç—å —É–≤–æ–ª—å–Ω–µ–Ω–∏–µ —Å –ø–æ–ª–Ω–æ–π –≤—ã–ø–ª–∞—Ç–æ–π?')) return;
        
        // –í—ã–ø–ª–∞—á–∏–≤–∞–µ–º –≤—Å—é —Å—É–º–º—É
        const total = this.adjustedData.totalToPay;
        
        // –†–∞—Å–ø—Ä–µ–¥–µ–ª—è–µ–º –º–µ–∂–¥—É –∫–∞—Ä—Ç–æ–π –∏ –Ω–∞–ª–∏—á–Ω—ã–º–∏
        this.adjustedData.advanceCard = Math.min(total, 8600);
        this.adjustedData.advanceCash = Math.max(0, total - 8600);
        this.adjustedData.salaryCard = 0;
        this.adjustedData.salaryCash = 0;
        
        this.adjustedData.isTermination = true;
        this.adjustedData.terminationReason = prompt('–ü—Ä–∏—á–∏–Ω–∞ —É–≤–æ–ª—å–Ω–µ–Ω–∏—è:', '–ü–æ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–º—É –∂–µ–ª–∞–Ω–∏—é');
        
        this.updateCalculations();
    }

    // –°–±—Ä–æ—Å –∏–∑–º–µ–Ω–µ–Ω–∏–π
    reset() {
        if (!confirm('–°–±—Ä–æ—Å–∏—Ç—å –≤—Å–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è?')) return;
        
        this.adjustedData = JSON.parse(JSON.stringify(this.originalData));
        this.createModal(); // –ü–µ—Ä–µ—Ä–∏—Å–æ–≤—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
    }
}

// –°–æ–∑–¥–∞–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä
const ucModal = new UniversalCorrectionsModal();

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
window.ucModal = ucModal;